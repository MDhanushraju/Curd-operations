# 🍳 Recipe App

A **React-based recipe application** styled with **Bootstrap** and custom **gradient CSS**. The app features a responsive design, a navigation bar, and a recipe explorer that displays recipe cards. It’s lightweight, modular, and built to scale into a full cooking assistant app.

---

## 🚀 Project Overview
This project is structured around React components with a focus on clean UI and scalability.  
- **Navbar** → Top navigation bar with branding and links.  
- **RecipeApp** → Main section where recipes are displayed.  
- **Bootstrap + Custom CSS** → Provides responsiveness and modern gradient designs.  

---

## 📂 File Structure
- **`index.js`** → Entry point. Mounts `<App />` into the DOM and applies Bootstrap + custom styles.  
- **`App.js`** → Central component that renders `Navbar` and `RecipeApp`.  
- **`App.css`** → Custom gradient styles for buttons and backgrounds.  
- **`App.jsx`** → Experimental/unused file referencing `RecipeExplorer`.  
- **`/ref/Nav.js`** → Defines the navigation bar.  
- **`/ref/Main.js`** → Displays recipe cards with titles, descriptions, and buttons.  

---

## 🎨 Styling
- Uses **Bootstrap** for layout and components.  
- `App.css` overrides Bootstrap defaults with **gradient themes**:  
  - `.bg-info` → Blue to black background.  
  - `.btn-danger` → Red gradient button.  
  - `.btn-success` → Green gradient button.  
  - `.btn-warning` and `.btn-info` → Custom styled variations.  

---

## ⚙️ How It Works
1. User visits the app.  
2. `index.js` renders `<App />`.  
3. Inside `<App />`:  
   - `Navbar` appears at the top.  
   - `RecipeApp` loads recipes in card format.  
4. Bootstrap + CSS ensure responsiveness and modern styling.  

---

## 🛠️ Tech Stack
- **React.js** → Frontend framework.  
- **Bootstrap** → Layout and responsiveness.  
- **CSS (gradients)** → Custom styling for UI components.  

---

